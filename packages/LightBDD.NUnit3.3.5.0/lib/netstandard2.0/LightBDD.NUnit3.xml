<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightBDD.NUnit3</name>
    </assembly>
    <members>
        <member name="T:LightBDD.NUnit3.Configuration.TestFrameworkConfigurationExtensions">
            <summary>
            Extensions allowing to apply test framework default configuration.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.Configuration.TestFrameworkConfigurationExtensions.WithTestFrameworkDefaults(LightBDD.Core.Formatting.ExceptionFormatting.DefaultExceptionFormatter)">
            <summary>
            Adds NUnit specific stack trace member exclusions.
            </summary>
            <param name="formatter">Formatter.</param>
            <returns>Formatter.</returns>
        </member>
        <member name="M:LightBDD.NUnit3.Configuration.TestFrameworkConfigurationExtensions.AppendFrameworkDefaultProgressNotifiers(LightBDD.Framework.Configuration.ScenarioProgressNotifierConfiguration)">
            <summary>
            Appends LightBDD.NUnit3 default scenario progress notifiers.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.Configuration.TestFrameworkConfigurationExtensions.AppendFrameworkDefaultProgressNotifiers(LightBDD.Framework.Configuration.FeatureProgressNotifierConfiguration)">
            <summary>
            Appends LightBDD.NUnit3 default feature progress notifiers.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.Configuration.TestFrameworkConfigurationExtensions.AppendFrameworkDefaultProgressNotifiers(LightBDD.Framework.Configuration.ProgressNotifierConfiguration)">
            <summary>
            Appends LightBDD.NUnit3 default progress notifiers.
            </summary>
        </member>
        <member name="T:LightBDD.NUnit3.FeatureFixture">
            <summary>
            Base class for feature tests with NUnit framework.
            It offers <see cref="P:LightBDD.NUnit3.FeatureFixture.Runner"/> property allowing to execute scenarios belonging to the feature class.
            </summary>
        </member>
        <member name="P:LightBDD.NUnit3.FeatureFixture.Runner">
            <summary>
            Returns <see cref="T:LightBDD.Framework.IBddRunner"/> allowing to execute scenarios belonging to the feature class.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.FeatureFixture.#ctor">
            <summary>
            Default constructor initializing <see cref="P:LightBDD.NUnit3.FeatureFixture.Runner"/> for feature class instance.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.FeatureFixture.FeatureFixtureTearDown">
            <summary>
            Feature fixture tear down method disposing <see cref="P:LightBDD.NUnit3.FeatureFixture.Runner"/> after all tests are executed.
            </summary>
        </member>
        <member name="T:LightBDD.NUnit3.FeatureFixtureAttribute">
            <summary>
            Attribute that should be applied to all test classes representing feature tests.
            It is required for running LightBDD tests with NUnit testing framework.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.FeatureFixtureAttribute.BeforeTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Executed before each test is run</summary>
            <param name="test">The test that is going to be run.</param>
        </member>
        <member name="M:LightBDD.NUnit3.FeatureFixtureAttribute.AfterTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Executed after each test is run</summary>
            <param name="test">The test that has just been run.</param>
        </member>
        <member name="P:LightBDD.NUnit3.FeatureFixtureAttribute.Targets">
            <summary>Provides the target for the action attribute</summary>
            <returns>The target for the action attribute</returns>
        </member>
        <member name="T:LightBDD.NUnit3.FeatureRunnerProvider">
            <summary>
            Class allowing to instantiate <see cref="T:LightBDD.Core.Extensibility.IFeatureRunner"/> that is being configured to work with NUnit framework.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.FeatureRunnerProvider.GetRunnerFor(System.Type)">
            <summary>
            Returns <see cref="T:LightBDD.Core.Extensibility.IFeatureRunner"/> for given <paramref name="featureType"/>.
            </summary>
            <param name="featureType">Feature type.</param>
            <returns><see cref="T:LightBDD.Core.Extensibility.IFeatureRunner"/> object.</returns>
        </member>
        <member name="T:LightBDD.NUnit3.IgnoreScenarioAttribute">
            <summary>
            Attribute allowing to ignore scenario in declarative way. It can be applied on scenario method or step method as well as feature class.
            If applied on scenario, no steps will be executed, but scenario will be included in reports.
            If applied on class level, all scenarios in this class will get ignored.
            It is recommended to use this attribute in favor of <see cref="T:NUnit.Framework.IgnoreAttribute"/>.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.IgnoreScenarioAttribute.#ctor(System.String)">
            <summary>
            Default constructor allowing to specify ignore reason.
            </summary>
            <param name="reason">Ignore reason.</param>
        </member>
        <member name="P:LightBDD.NUnit3.IgnoreScenarioAttribute.Reason">
            <summary>
            Ignore reason.
            </summary>
        </member>
        <member name="P:LightBDD.NUnit3.IgnoreScenarioAttribute.Order">
            <summary>
            Order in which extensions should be applied, where instances of lower values would be executed first.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.IgnoreScenarioAttribute.ExecuteAsync(LightBDD.Core.Execution.IScenario,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Stops execution of current scenario with ignored status.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.IgnoreScenarioAttribute.ExecuteAsync(LightBDD.Core.Execution.IStep,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Stops execution of current step and scenario with ignored status.
            </summary>
        </member>
        <member name="T:LightBDD.NUnit3.LightBddScopeAttribute">
            <summary>
            An attribute allowing to initialize and finalize LightBDD in NUnit framework.
            
            The <c>[assembly:LightBddScope]</c> attribute has to be present in assembly containing LightBDD tests.
            It is possible to customize the LightBDD configuration by overriding the <see cref="M:LightBDD.NUnit3.LightBddScopeAttribute.OnConfigure(LightBDD.Core.Configuration.LightBddConfiguration)"/>() method,
            as well as execute code before any test and after all tests by overriding the <see cref="M:LightBDD.NUnit3.LightBddScopeAttribute.OnSetUp"/>() / <see cref="M:LightBDD.NUnit3.LightBddScopeAttribute.OnTearDown"/>() methods.
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.LightBddScopeAttribute.BeforeTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Executed before each test is run</summary>
            <param name="test">The test that is going to be run.</param>
        </member>
        <member name="M:LightBDD.NUnit3.LightBddScopeAttribute.OnConfigure(LightBDD.Core.Configuration.LightBddConfiguration)">
            <summary>
            Allows to customize LightBDD configuration.
            </summary>
            <param name="configuration">Configuration to customize.</param>
        </member>
        <member name="M:LightBDD.NUnit3.LightBddScopeAttribute.OnSetUp">
            <summary>
            Allows to execute additional actions after LightBDD scope initialization
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.LightBddScopeAttribute.OnTearDown">
            <summary>
            Allows to execute additional cleanup just after LightBDD scope termination
            </summary>
        </member>
        <member name="M:LightBDD.NUnit3.LightBddScopeAttribute.AfterTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Executed after each test is run</summary>
            <param name="test">The test that has just been run.</param>
        </member>
        <member name="P:LightBDD.NUnit3.LightBddScopeAttribute.Targets">
            <summary>Provides the target for the action attribute</summary>
            <returns>The target for the action attribute</returns>
        </member>
        <member name="T:LightBDD.NUnit3.ScenarioAttribute">
            <summary>
            Scenario attribute that should be used for NUnit framework tests, as a replacement for [Test] attribute.
            The ScenarioAttribute represents scenario test method.
            </summary>
        </member>
    </members>
</doc>
